services:
  auth-server:
      image: node:latest
      container_name: auth-server
      env_file:
      - ./.env
      restart: always
      ports:
        - $AUTH_SERVER_PORT:$AUTH_SERVER_PORT
      environment:
        - AUTH_SERVER_PORT=$AUTH_SERVER_PORT
        - AUTH_SERVER_ADDRESS=$AUTH_SERVER_ADDRESS
        - LOG_LEVEL=$LOG_LEVEL
        - DB_PORT=$DB_PORT
        - DB_ROOT_PASSWORD=$DB_ROOT_PASSWORD
        - AUTH_DB_DATABASE_NAME=$AUTH_DB_DATABASE_NAME
        - DB_USER=$DB_USER
        - CACHE_PORT=$CACHE_PORT
        - DB_HOST=database
        - CACHE_HOST=cache
      volumes:
        - .:/usr/app
      depends_on:
        - cache
        - database
      working_dir: /usr/app
      command: bash -c "npm install && npm run auth"
  game-server:
      image: node:latest
      container_name: game-server
      env_file:
      - ./.env
      restart: always
      ports:
        - $GAME_SERVER_PORT:$GAME_SERVER_PORT
      environment:
        - GAME_SERVER_PORT=$GAME_SERVER_PORT
        - GAME_SERVER_ADDRESS=$GAME_SERVER_ADDRESS
        - LOG_LEVEL=$LOG_LEVEL
        - DB_PORT=$DB_PORT
        - DB_ROOT_PASSWORD=$DB_ROOT_PASSWORD
        - GAME_DB_DATABASE_NAME=$GAME_DB_DATABASE_NAME
        - DB_USER=$DB_USER
        - CACHE_PORT=$CACHE_PORT
        - DB_HOST=database
        - CACHE_HOST=cache
      volumes:
        - .:/usr/app
      depends_on:
        - cache
        - database
      working_dir: /usr/app
      command: bash -c "npm install && npm run game"

  cache:
    image: redis:latest
    restart: unless-stopped
    container_name: cache
    env_file:
      - ./.env
    ports:
    - $CACHE_PORT:$CACHE_PORT

  database:
    image: mysql:5.7
    platform: linux/x86_64
    container_name: database
    restart: always
    env_file:
      - ./.env
    environment:
      MYSQL_ROOT_PASSWORD: $DB_ROOT_PASSWORD
    ports:
      - $DB_PORT:$DB_PORT
